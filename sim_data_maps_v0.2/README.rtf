{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red217\green11\blue0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 The noise in a given pixel is fully characterized by the covariance between T,Q & U.\
\
We use the method of Cholesky decomposition to generate such a correlated noise. \
\
We first perform this operation on a single pixel and check that the Cholesky module is working fine, by generating correlated noise at a single pixel and then numerically reconstructing the covariance and testing that it agrees with the input covariance.\
\
\cf2 This version has some weird bug where the map2alm operation on noise map fails.\
\
  - Works for NSIDE=256 but fails for NSIDE=512 !! This was happening because the covariance maps have a few bad pixels, which was resulting in an ill defined lower triangular matrix. \
Specifically @ NSIDE=512 :  
\f1\fs22 \cf2 \CocoaLigature0 [ 751745.,  753794.,  755843.,  757891.,  759941., 761989., 764042.,  766090.,  768139.,  772237.,  774285.]
\f0\fs24 \cf2 \CocoaLigature1 \
 \
Soln. : We check for invalid pixels where the lower triangular matrix is ill-defined and set those to zero.}